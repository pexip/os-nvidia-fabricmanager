# NVIDIA Fabric Manager configuration file.
# Note: This configuration file is read during Fabric Manager service startup. So, Fabric Manager 
# service restart is required for new settings to take effect.

#	Description: Fabric Manager logging levels
#	Possible Values:
#		0  - All the logging is disabled
#		1  - Set log level to CRITICAL and above
#		2  - Set log level to ERROR and above
#		3  - Set log level to WARNING and above
#		4  - Set log level to INFO and above
LOG_LEVEL=4

#	Description: Filename for Fabric Manager logs
#	Possible Values:
#       Full path/filename string (max length of 256). Logs will be redirected to console(stderr)
#       if the specified log file can't be opened or the path is empty.
LOG_FILE_NAME=/var/log/fabricmanager.log

#	Description: Append to an existing log file or overwrite the logs
#	Possible Values:
#		0  - No  (Log file will be overwritten)
#		1  - Yes (Append to existing log)
LOG_APPEND_TO_LOG=1

#	Description: Max size of log file (in MB)
#	Possible Values:
#		Any Integer values
LOG_FILE_MAX_SIZE=1024

#   Description: Number of times the FM log is rotated once it reaches LOG_FILE_MAX_SIZE
#   Possible Values:
#       0                - Log is not rotated. Logging is stopped once the FM log file reaches
#                          the size specified in LOG_FILE_MAX_SIZE
#       Non-zero Integer - Log is rotated upto the number of times specified in LOG_MAX_ROTATE_COUNT,
#                          after the size of the log file reaches the size specified in LOG_FILE_MAX_SIZE.
#                          Combined FM log size is LOG_FILE_MAX_SIZE multipled by LOG_MAX_ROTATE_COUNT+1
#                          Once this threshold is reached, the oldest log file is purged and reused.
LOG_MAX_ROTATE_COUNT=3

#	Description: Redirect all the logs to syslog instead of logging to file
#	Possible Values:
#		0  - No
#		1  - Yes
LOG_USE_SYSLOG=0

#	Description: daemonize Fabric Manager on start-up
#	Possible Values:
#       0  - No (Do not daemonize and run fabric manager as a normal process)
#       1  - Yes (Run Fabric Manager process as Unix daemon
DAEMONIZE=1

#	Description: Network interface to listen for Global and Local Fabric Manager communication
#	Possible Values:
#		A valid IPv4 address. By default, uses loopback (127.0.0.1) interface
BIND_INTERFACE_IP=127.0.0.1

#	Description: Starting TCP port number for Global and Local Fabric Manager communication
#	Possible Values:
#		Any value between 0 and 65535
STARTING_TCP_PORT=16000

#   Description: Use Unix sockets instead of TCP Socket for Global and Local Fabric Manager communication
#	Possible Values:
#		Unix domain socket path (max length of 256)
#	Default Value: 
#		Empty String (TCP socket will be used instead of Unix sockets)
UNIX_SOCKET_PATH=

#	Description: Fabric Manager Operating Mode
#	Possible Values:
#       0  - Start Fabric Manager in Bare metal or Full pass through virtualization mode
#       1  - Start Fabric Manager in Shared NVSwitch multitenancy mode. 
#       2  - Start Fabric Manager in vGPU based multitenancy mode.
FABRIC_MODE=0

#	Description: Restart Fabric Manager after exit. Applicable only in Shared NVSwitch or vGPU based multitenancy mode
#	Possible Values:
#       0  - Start Fabric Manager and follow full initialization sequence
#       1  - Start Fabric Manager and follow Shared NVSwitch or vGPU based multitenancy mode resiliency/restart sequence.
FABRIC_MODE_RESTART=0

#	Description: Specify the filename to be used to save Fabric Manager states.
#                    Valid only if Shared NVSwitch or vGPU based multitenancy mode is enabled
#	Possible Values:
#	    Full path/filename string (max length of 256)
STATE_FILE_NAME=/tmp/fabricmanager.state

#	Description: Network interface to listen for Fabric Manager SDK/API to communicate with running FM instance.
#	Possible Values:
#		A valid IPv4 address. By default, uses loopback (127.0.0.1) interface
FM_CMD_BIND_INTERFACE=127.0.0.1 

#	Description: TCP port number for Fabric Manager SDK/API to communicate with running FM instance.
#	Possible Values:
#		Any value between 0 and 65535
FM_CMD_PORT_NUMBER=6666

#	Description: Use Unix sockets instead of TCP Socket for Fabric Manager SDK/API communication
#	Possible Values:
#		Unix domain socket path (max length of 256)
#	Default Value: 
#		Empty String (TCP socket will be used instead of Unix sockets)
FM_CMD_UNIX_SOCKET_PATH=

#   Description: Fabric Manager does not exit when facing failures
#   Possible Values:
#       0 – Fabric Manager service will terminate on errors such as, NVSwitch and GPU config failure, 
#           typical software errors etc.  
#       1 – Fabric Manager service will stay running on errors such as, NVSwitch and GPU config failure, 
#           typical software errors etc. However, the system will be uninitialized and CUDA application 
#           launch will fail. 
FM_STAY_RESIDENT_ON_FAILURES=0

#   Description: Degraded Mode options when there is an Access Link Failure (GPU to NVSwitch NVLink failure)
#   Possible Values:
#       In bare metal or full passthrough virtualization mode
#       0  - Remove the GPU with the Access NVLink failure from NVLink P2P capability
#       1  - Disable the NVSwitch and its peer NVSwitch, which reduces NVLink P2P bandwidth
#            Note: This is only effective on DGX A100 and HGX A100 NVSwitch based systems
#
#       In Shared NVSwitch or vGPU based multitenancy mode
#       0  - Disable partitions which are using the Access Link failed GPU
#            Note: This is only effective on DGX A100 and HGX A100 NVSwitch based systems
#       1  - Disable the NVSwitch and its peer NVSwitch,
#            all partitions will be available but with reduced NVLink P2P bandwidth
#            Note: This is only effective on DGX A100 and HGX A100 NVSwitch based systems
ACCESS_LINK_FAILURE_MODE=0

#   Description: Degraded Mode options when there is a Trunk Link Failure (NVSwitch to NVSwitch NVLink failure)
#   Possible Values:
#       In bare metal or full passthrough virtualization mode
#       0  - Exit Fabric Manager and leave the system/NVLinks uninitialized
#            Note: This is only effective on DGX A100 and HGX A100 NVSwitch based systems
#       1  - Disable the NVSwitch and its peer NVSwitch, which reduces NVLink P2P bandwidth
#            Note: This is only effective on DGX A100 and HGX A100 NVSwitch based systems
#
#       In Shared NVSwitch or vGPU based multitenancy mode
#       0  - Remove partitions that are using the Trunk NVLinks
#            Note: This is only effective on DGX A100 and HGX A100 NVSwitch based systems
#       1  - Disable the NVSwitch and its peer NVSwitch,
#            all partitions will be available but with reduced NVLink P2P bandwidth
#            Note: This is only effective on DGX A100 and HGX A100 NVSwitch based systems
TRUNK_LINK_FAILURE_MODE=0

#   Description: Degraded Mode options when there is a NVSwitch failure or an NVSwitch is excluded
#   Possible Values:
#       In bare metal or full passthrough virtualization mode
#       0  - Abort Fabric Manager
#       1  - Disable the NVSwitch and its peer NVSwitch, which reduces P2P bandwidth
#            Note: This is only effective on DGX A100 and HGX A100 NVSwitch based systems
#
#       In Shared NVSwitch or vGPU based multitenancy mode
#       0  - Disable partitions that are using the NVSwitch
#            This is only effective on DGX A100 and HGX A100 NVSwitch based systems
#       1  - Disable the NVSwitch and its peer NVSwitch,
#            all partitions will be available but with reduced NVLink P2P bandwidth
#            Note: This is only effective on DGX A100 and HGX A100 NVSwitch based systems
NVSWITCH_FAILURE_MODE=0

#	Description: Control running CUDA jobs behavior when Fabric Manager service is stopped or terminated
#	Possible Values:
#       0  - Do not abort running CUDA jobs when Fabric Manager exits. However new CUDA job launch will fail.
#       1  - Abort all running CUDA jobs when Fabric Manager exits.
#            Note: This is not effective on DGX H100 and HGX H100 NVSwitch based systems
ABORT_CUDA_JOBS_ON_FM_EXIT=1

#       Description: Absolute directory path containing Fabric Manager topology files
#       Possible Values:
#               A valid directory path string (max length of 256)
TOPOLOGY_FILE_PATH=/usr/share/nvidia/nvswitch


#       Description: Absolute directory path containing Fabric Manager's database files
#       Possible Values:
#               A valid directory path string (max length of 256)
DATABASE_PATH=/usr/share/nvidia/nvswitch
